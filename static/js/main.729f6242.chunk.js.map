{"version":3,"sources":["components/Navbar.js","Header.js","img/magic-book.png","components/Hero.js","components/Card.js","components/Cards.js","Home.js","img/chess_ai.gif","img/titanic.jpg","TitanicSurvivor.js","index.js"],"names":["Navbar","links","className","map","to","link","text","key","nav_links","Header","Hero","alt","src","icon","height","Card","title","description","imgsrc","href","target","rel","style","backgroundImage","Cards","data","id","projects","social_links","Home","textAlign","marginBottom","tf","require","findLargestValueIndex","someArray","ret","i","length","parsePreds","index","a","loadLayersModel","loadedModel","compile","optimizer","train","adam","loss","metrics","model","stateMethod","args","predict","tensor","dataSync","pred","TitanicSurvivor","useState","survived","setSurvived","loadModel","then","predictSurvival","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.729f6242.chunk.js","sourcesContent":["import {Link} from 'react-router-dom'\r\n\r\nimport \"../index.css\"\r\n\r\nconst Navbar = ({links}) => {\r\n    return (\r\n        <>\r\n        <div className=\"navbar\">\r\n            {links.map((links) => (\r\n                // <a key={links.key} href={links.link} target=\"_blank\" rel=\"noreferrer\"><button className=\"navbar-btn\">{links.text}</button></a>\r\n                <Link key= {links.key} to={links.link} className=\"navbar-btn\">{links.text}</Link>\r\n            ))}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import { Outlet } from 'react-router-dom'\r\n\r\nimport Navbar from \"./components/Navbar\"\r\n\r\nconst nav_links = [\r\n  {\r\n    key: 1,\r\n    text: \"Home\",\r\n    link: \"/\"\r\n  },\r\n  {\r\n    key:2,\r\n    text: \"About\",\r\n    link: \"/titanic-survivor\"\r\n  },\r\n  {\r\n    key:3,\r\n    text: \"Contact\",\r\n    link: \"https://www.google.com/\"\r\n  }\r\n]\r\n\r\nfunction Header() {\r\n  return (\r\n      <>\r\n        <div className=\"banner\">\r\n          <div className=\"logo\">aukibit</div>\r\n          <Navbar links={nav_links} />\r\n        </div>\r\n        <Outlet />\r\n      </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/magic-book.51ec30e9.png\";","import \"../index.css\"\r\n\r\nimport icon from \"../img/magic-book.png\"\r\n/* https://www.flaticon.com/packs/magic-138?style_id=1225&family_id=333&group_id=1837 */\r\n\r\nconst Hero = () => {\r\n    return (\r\n        <div  className=\"hero\">\r\n            <div>\r\n                <h1>Let your people do people work.</h1>\r\n                <h3>We have robots for the robot work.</h3>\r\n                <button>Contact</button>\r\n            </div>\r\n            <div className=\"hero-card\">\r\n                <div className=\"hero-icon\">\r\n                        <img alt=\"icon\" src={icon} height={100} ></img>\r\n                </div>\r\n                <div>\r\n                    <h2>Works like magic.</h2>\r\n                    <h3>Tech that makes your barriers to growth <span className=\"hero-gradient-text\">disappear</span></h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Hero\r\n","import \"../index.css\";\r\n\r\nconst Card = ({ title, description, imgsrc, link }) => {\r\n  return (\r\n    <a\r\n      href={link}\r\n      target=\"_blank\"\r\n      rel=\"noreferrer\"\r\n      className=\"card-image\"\r\n      style={{ backgroundImage: `url(\"${imgsrc}\")` }}\r\n    >\r\n      <div className=\"card-background\">\r\n        <div className=\"card-text\">\r\n          <h3>{title}</h3>\r\n          {/* Updated for the test, the data-testid is another way for a test to select an element, it means adding to your markup but if you had multiple text lines with the same data etc it wouldn't work to use 'findbytext' etc, there are many different selectors for you to use and have a look at though */}\r\n          {/* description && you would have seen if / else you can't write that here so you'd need to separate it into a function and call it which is messy */}\r\n          {/* the next option is to use a ternary operator https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator this allows use to return one of two options based on an outcome as so: */}\r\n          {/* description ? \"TRUE\" : \"FALSE\" so here it would return the string true if there was a description and false if there was not, the real solution would be to return the <p> if true if not return \"\" or null */}\r\n          {/* Thats however messy the NEXT and BEST solution is to say description && this means if description isn't a null type return the what follows in our case the <p>  */}\r\n          {description && <p data-testid=\"card-description\">{description}</p>}\r\n        </div>\r\n      </div>\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default Card;","import Card from \"./Card\"\r\nimport \"../index.css\"\r\n\r\nconst Cards = ({ data }) => {\r\n    return (\r\n        <div className=\"cards\">\r\n        {data.map((data) => (\r\n            <Card key={data.id} title={data.title} description={data.description} imgsrc={data.imgsrc} link={data.link} />\r\n        ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","import Navbar from \"./components/Navbar\"\r\nimport Hero from \"./components/Hero\"\r\nimport Cards from \"./components/Cards\"\r\nimport chess_ai_gif from \"./img/chess_ai.gif\"\r\nimport titanic_img from \"./img/titanic.jpg\"\r\n\r\nconst projects = [\r\n  {\r\n    id: 1, \r\n    title: \"Chess AI\",\r\n    description: \"Playable Chess AI with TensorFlow\",\r\n    imgsrc: chess_ai_gif,\r\n    link: \"https://medium.com/@dylanjsw/playable-chess-ai-with-tensorflow-26c318207452\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Titanic Survivor\",\r\n    description: \"Native JavaScript TensorFlowJS implementation\",\r\n    imgsrc: titanic_img,\r\n    link: \"/titanic-survivor\"\r\n  },\r\n  {\r\n    id: 3, \r\n    title: \"Project 3\",\r\n    description: \"A project\",\r\n    imgsrc:\"\"\r\n  },\r\n  {\r\n    id: 4, \r\n    title: \"Project 4\",\r\n    description: \"A project\",\r\n    imgsrc:\"\"\r\n  }\r\n]\r\n\r\nconst social_links = [\r\n  {\r\n    key: 1,\r\n    text: \"Medium\",\r\n    link: \"https://medium.com/@dylanjsw\"\r\n  },\r\n  {\r\n    key: 2,\r\n    text: \"GitHub\",\r\n    link: \"https://github.com/bestow-wings/\"\r\n  },\r\n  {\r\n    key: 3,\r\n    text: \"Email\",\r\n    link: \"mailto:dylanjsw@outlook.com\"\r\n  }\r\n]\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n        <Hero />\r\n        <div className=\"content\">\r\n          <Cards data={projects} />\r\n          <div style={{textAlign: \"center\", marginBottom:\"5rem\"}}>\r\n            <p>Some information</p>\r\n            <button>Contact</button>\r\n          </div>\r\n          <Navbar links={social_links} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/chess_ai.5d90db09.gif\";","export default __webpack_public_path__ + \"static/media/titanic.9f2432de.jpg\";","import { useState } from 'react';\r\n\r\nimport \"./index.css\"\r\n\r\nconst tf = require(\"@tensorflow/tfjs\")\r\n\r\nfunction findLargestValueIndex(someArray) {\r\n  var ret = 0;\r\n  for (let i = 1; i < someArray.length; i++) {\r\n    if (someArray[i] < someArray[ret]) {\r\n      ret = i;\r\n    }\r\n  }\r\n  return ret;\r\n}\r\n\r\nfunction parsePreds (index) {\r\n  const survived =  index && 0;\r\n  if (survived) { return \"Yes\" }\r\n  else { return \"No\" }\r\n}\r\n\r\nasync function loadModel() {\r\n  // Demonstrate that the loaded model also works\r\n  const loadedModel = await tf.loadLayersModel('saved_model/model.json');\r\n  loadedModel.compile({\r\n    optimizer: tf.train.adam(),\r\n    loss: 'sparseCategoricalCrossentropy',\r\n    metrics: ['accuracy'] \r\n  })\r\n\r\n  return loadedModel;\r\n}\r\n\r\nasync function predictSurvival(model, stateMethod, args) {\r\n  var pred = await model.predict(tf.tensor([[3, 2, -1  , 0, 0, 7.2291999  , 1]])).dataSync();\r\n  stateMethod(parsePreds(findLargestValueIndex(pred)));  \r\n}\r\n\r\nfunction TitanicSurvivor() {\r\n\r\n  const [survived, setSurvived] = useState(\"Waiting\");\r\n\r\n  loadModel().then((model) => predictSurvival(model, setSurvived, {}));\r\n\r\n  return (\r\n    <div className = \"titanic-survivor\">\r\n      <div className = \"titanic-survivor-heading\">\r\n        <h1>Titanic Survivor</h1>\r\n      </div>\r\n      <div className = \"titanic-survivor-ul\">\r\n        <ul>\r\n          <li>Age</li>\r\n          <li>Pclass</li>\r\n          <li>Sex</li>\r\n          <li>Fare</li>\r\n          <li>SibSp</li>\r\n          <li>Parch</li>\r\n          <li>Embarked</li>\r\n        </ul>\r\n        <p>{survived}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TitanicSurvivor;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport Header from './Header'\r\nimport Home from './Home';\r\nimport TitanicSurvivor from './TitanicSurvivor';\r\n\r\nexport default function App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Header />}>\r\n          <Route index element={<Home />} />\r\n          <Route path=\"titanic-survivor\" element={<TitanicSurvivor />} />\r\n        </Route>\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}